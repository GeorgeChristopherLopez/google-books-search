{"version":3,"sources":["components/Header.js","components/Results.js","components/HomePageResults.js","components/Details.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","history","useHistory","React","useState","searchTerm","setSearchTerm","input","setInput","setResults","handleSearch","event","console","log","fetch","then","response","json","responseData","newResult","items","onChange","catch","error","value","results","className","alt","style","textDecoration","color","to","autoFocus","onKeyPress","key","push","type","placeholder","target","term","split","join","onClick","Results","length","map","item","thumnail","volumeInfo","imageLinks","margin","handleClick","src","thumbnail","toString","border","height","width","HomePageResults","fetchDataForHome","setState","state","bind","searchTearm","this","Component","Details","book","display","gridTemplateColumns","textAlign","title","App","setBook","handleBookSelect","newValue","exact","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.1a15bea8.chunk.js","sourcesContent":["\r\nimport { Link} from \"react-router-dom\";\r\nimport React, { useState, useEffect, useRef, Fragment } from 'react';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nfunction Header(props) {\r\n    /* SENSITIVE INFO ***************************************************************************************************************\r\n  remove before uploading */\r\n  const API_KEY = 'api_key';\r\n  /***********************************************************************************************************************************/\r\n  let history = useHistory();\r\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\r\n  const [input, setInput] = React.useState(\"\");\r\n  const [results, setResults] = React.useState([]);\r\n  \r\n  \r\n  const fetchData =  () => {\r\n\r\n      fetch(`https://www.googleapis.com/books/v1/volumes?q=${searchTerm}`)\r\n      .then(response => response.json())\r\n      .then(responseData => {\r\n        let newResult = responseData.items;\r\n       \r\n        setResults(newResult);\r\n        props.onChange(newResult);\r\n      \r\n      \r\n      })\r\n      .catch(error => {\r\n        console.log('Error fetching and parsing data', error);\r\n      });\r\n  };\r\n \r\n \r\n  \r\n  const handleChange = event => {\r\n    setInput(event.target.value);\r\n    let term = (event.target.value).split(\" \");\r\n    term = term.join('+');\r\n    setSearchTerm(term);\r\n   \r\n  };\r\n\r\n\r\n  const handleSearch = event => {\r\n   console.log(\"searching for....\"+searchTerm);\r\n   if(searchTerm)\r\n   fetchData();\r\n   \r\n  }\r\n  const handleKeyPress = (event) => {\r\n    if(event.key == 'Enter')\r\n    handleSearch()\r\n    history.push('/search')\r\n    \r\n    \r\n   }\r\n    \r\n  return (\r\n \r\n   <header value={props.results} className=\"App-header\">\r\n        <h1  className=\"App-logo\" alt=\"google-logo\"><Link style={{ textDecoration: 'none', color: '#333' }}    to=\"/\">\r\n        Google <span className=\"sub-logo\">Books API</span>\r\n        \r\n        </Link></h1> \r\n       <div className=\"search-bar-container\"> \r\n       <input autoFocus={true}\r\n       onKeyPress={handleKeyPress}\r\n       className=\"search-bar\" \r\n       type=\"text\"\r\n       placeholder=\"Search\"\r\n       value={input}\r\n       onChange={handleChange}/><Link onClick={handleSearch}  className=\"search-btn\" to=\"/search\"><SearchIcon/></Link>\r\n       </div>\r\n   \r\n          </header>\r\n         \r\n\r\n\r\n   \r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Link} from \"react-router-dom\";\r\n\r\nfunction Results(props) {\r\n  const results = props.results;\r\n  const handleClick=(key)=>{\r\n    props.onChange(results[key]);\r\n    console.log(results);\r\n    console.log(key);\r\n  }\r\n  return (\r\n    <div className=\"results\" > \r\n   \r\n\r\n\r\n{   \r\n    \r\n      results.length > 0  ?\r\n      results.map(function(item, key) {\r\n        let thumnail = (item.volumeInfo.imageLinks) ?  true : false;\r\n        return <div className=\"book-card\" style={{margin: '0 auto'}}  key={key}>\r\n          <Link to=\"/details\" onClick={()=>handleClick(key)}>  \r\n          { thumnail ?  <img   src={(item.volumeInfo.imageLinks.thumbnail).toString()}/>: <div style={{border: '1px solid black', height: '100%', width:'100%'}} >`no image available`</div>   }  \r\n          \r\n          </Link>\r\n      \r\n         \r\n        </div>\r\n      }) \r\n  : null\r\n  \r\n\r\n\r\n   \r\n\r\n    \r\n}\r\n  \r\n\r\n\r\n\r\n \r\n\r\n </div>\r\n\r\n  );\r\n}\r\n\r\nexport default Results;\r\n","import React from 'react';\r\nimport { Link} from \"react-router-dom\";\r\n\r\n\r\n\r\nclass HomePageResults extends React.Component {\r\n    \r\n    constructor(props) {\r\n      super(props);\r\n      this.fetchDataForHome= this.fetchDataForHome.bind(this);\r\n      this.handleClick = this.handleClick.bind(this);\r\n      this.state = {searchTearm: this.props.searchTearm, results: []};\r\n      \r\n      \r\n  \r\n\r\n    }\r\n   \r\n    componentWillMount() {\r\n        console.log('mounted')\r\n       \r\n        console.log( this.fetchDataForHome())\r\n       // this.props.onLoad(Promise.all([reduxagent.get.all()]));\r\n      } \r\n      \r\n   fetchDataForHome =  () => {\r\n        console.log(\"fetching for the homepage\")\r\n        fetch(`https://www.googleapis.com/books/v1/volumes?q=javascript`)\r\n        .then(response => response.json())\r\n        .then(responseData => {\r\n          let newResult = responseData.items;\r\n          this.setState({\r\n            results: newResult\r\n          });\r\n          \r\n         this.props.onChange(newResult);\r\n          \r\n         console.log(\"results:\", newResult)\r\n        })\r\n        .catch(error => {\r\n          console.log('Error fetching and parsing data', error);\r\n         \r\n        });\r\n    }\r\n    handleClick=(key)=>{\r\n        this.props.onChange(this.state.results[key]);\r\n        console.log(this.state.results);\r\n        console.log(key);\r\n    }\r\n   \r\n\r\n      render() {\r\n      return (\r\n        <div className=\"results\"> \r\n   \r\n\r\n\r\n        {   \r\n            \r\n              this.state.results.length > 0  ?\r\n              this.state.results.map(function(item, key) {\r\n                let thumnail = (item.volumeInfo.imageLinks) ?  true : false;\r\n                return <div className=\"book-card\" style={{margin: '0 auto'}}  key={key}>\r\n                  <Link to=\"/details\" onClick={()=>this.handleClick(key)}>  \r\n                  { thumnail ?  <img   src={(item.volumeInfo.imageLinks.thumbnail).toString()}/>: <div style={{border: '1px solid black', height: '100%', width:'100%'}} >`no image available`</div>   }  \r\n                  \r\n                  </Link>\r\n              \r\n                 \r\n                </div>\r\n              }, this) \r\n          : null\r\n          \r\n        \r\n        \r\n           \r\n        \r\n            \r\n        }\r\n          \r\n        \r\n        \r\n        \r\n         \r\n        \r\n         </div>\r\n        \r\n      );\r\n    }\r\n  }\r\n  export default HomePageResults;\r\n","import React, { Fragment } from 'react';\r\nimport { Link} from \"react-router-dom\";\r\n\r\nfunction Details(props) {\r\n  const book = props.results;\r\n  const printData=()=>{\r\n    console.log(book);\r\n  }\r\n\r\n  return (\r\n    \r\n    <div className=\"details\" style={{display: 'grid', gridTemplateColumns: '1fr', textAlign: 'center'}}> \r\n      { book ? <Fragment>\r\n        <h1>{(book.volumeInfo.title).toString()}</h1> <img style={{margin: '0 auto'}}  src={(book.volumeInfo.imageLinks.thumbnail).toString()}/>\r\n        </Fragment>: <h1 style={{ height: '100%', width:'100%'}} >No Details Available...Search for something</h1>   }  \r\n        \r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default Details;\r\n","import React from 'react';\nimport Header from './components/Header';\nimport Results from './components/Results';\nimport HomePageResult from './components/HomePageResults'\nimport Details from './components/Details';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n \n} from \"react-router-dom\";\n\n\n\nfunction App() {\nconst [results, setResults] = React.useState([]);\nconst [book, setBook] = React.useState(null);\n\nfunction handleSearch(newValue) {\n  setResults(newValue);\n  console.log(newValue);\n}\nfunction handleBookSelect(newValue) {\n  setBook(newValue);\n \n}\n  return (\n    <div className=\"App\">\n    <Router>\n    <Header  value={results} onChange={handleSearch}/>\n    <Switch>\n          <Route  exact path=\"/\">\n            <HomePageResult   results={results} onChange={handleBookSelect}/>\n          </Route>\n          <Route  exact path=\"/search\">\n            <Results  results={results} onChange={handleBookSelect}/>\n          </Route>\n          <Route exact path=\"/details\">\n            <Details results={book}  />\n          </Route>\n        </Switch>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n/* remove before uploading */\nconst APIKEY = 'AIzaSyDUON-mFOfHhu8iRH585Kfjx_Sv-ZkMznI';\nconst keyParam = 'key=API_KEY';\n/************************/\n/*\nfetch('https://www.googleapis.com/books/v1/volumes?q=head+first+javascript&key=AIzaSyDUON-mFOfHhu8iRH585Kfjx_Sv-ZkMznI')\n  .then(response => response.json())\n  .then(data => console.log(data));\n\n*/\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}